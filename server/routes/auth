const express = require('express');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const User = require('../models/User');

const router = express.Router();

router.get('/test', async(req, res) => {
    res.send('API working');
});

router.post('/register', async(req, res) => {
    console.log("BODY:", req.body);
    try {
       const {email, password} = req.body;
       const hashed = await bcrypt.hash(password, 10);
       const user = await User.create({
        email, password : hashed });
        res.status(201).json({message: 'User created'});
    } catch (err) {
        res.status(400).json({error: err.message});
    }
});

router.post('/login', async(req, res) => {
    try {
        const {email, password} = req.body;
        const user = await User.findOne({ email });
        if(!user) return res.status(404).json({error: 'User not found' });

        const isMatch = await bcrypt.compare(password, user.password);
        if(!isMatch) return res.status(404).json({error: 'Invalid password'});

        const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {expiresIn: '1d'});
        res.json({token});

    } catch (err) {
        res.status(400).json({error: err.message});
    }
});


module.exports = router;